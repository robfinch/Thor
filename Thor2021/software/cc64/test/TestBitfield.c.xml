<title>CC64 Compiler debug file</title>
<compile>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EA48(__new)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __new into 00CD49E0Insert into global table
<Find>__new</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EAF8(__autonew)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __autonew into 00CD49E0Insert into global table
<Find>__autonew</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EBA8(__delete)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __delete into 00CD49E0Insert into global table
<Find>__delete</Find>
At insert:
Type array:
   013 
Instructions not in outcode table.
{ 0 1 7 9 10 12 14 16 17 18 20 21 24 26 29 31 37 43 44 45 47 48 49 58 67 68 69 78 79 83 84 93 94 95 117 118 119 120 122 123 124 129 130 131 132 137 138 151 154 155 156 157 165 166 193 194 195 196 197 198 216 219 221 226 227 228 229 231 236 238 240 243 244 267 268 271 273 274 279 280 283 286 293 294 301 309 310 311 337 341 342 345 346 349 350 351 357 362 367 368 369 370 371 372 373 374 375 391 }<Find>_typedef</Find>
<Parsing GlobalDecl>
<ParseGlobalDecl>
<declare>
A<ParseSpecifier>
A<Find>_struct</Find>
<Find>__tagFieldStruct</Find>
<Find>__tagFieldStruct</Find>
Insert into tagtable:__tagFieldStruct|
<Find>__tagFieldStruct</Find>
At insert:
Type array:
   
Insert into tagtable:__tagFieldStruct|
<Find>__tagFieldStruct:MatchIsEqual:T2:Exact matchType array:
   
Type array:
   
Insert into tagtable:__tagFieldStruct|
<Find>__tagFieldStruct:MatchIsEqual:T2:Exact matchType array:
   
Type array:
   
<Find>_unsigned</Find>
<declare>
A<ParseSpecifier>
A<Find>_int</Find>
<TYP__Make>
</TYP__Make>
<Find>_a</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_a|CDE<ParseBitfieldSpec><OptConst2></OptConst2></ParseBitfieldSpec>
</ParsePrefixId></ParseDeclPrefix>
C<TYP__Make>
</TYP__Make>
<FindSymbol><Find>_a</Find>
hh1</FindSymbol>
DEGHInsert _a into 00A10428<Find>_a</Find>
At insert:
Type array:
   
<Find>_unsigned</Find>
</declare>
<declare>
A<ParseSpecifier>
A<Find>_int</Find>
<TYP__Make>
</TYP__Make>
<Find>_b</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_b|CDE<ParseBitfieldSpec><OptConst2></OptConst2></ParseBitfieldSpec>
</ParsePrefixId></ParseDeclPrefix>
C<TYP__Make>
</TYP__Make>
<FindSymbol><Find>_b</Find>
hh1</FindSymbol>
DEGHInsert _b into 00A10428<Find>_b</Find>
At insert:
Type array:
   
<Find>_unsigned</Find>
</declare>
<declare>
A<ParseSpecifier>
A<Find>_int</Find>
<TYP__Make>
</TYP__Make>
<Find>_c</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_c|CDE<ParseBitfieldSpec><OptConst2></OptConst2></ParseBitfieldSpec>
</ParsePrefixId></ParseDeclPrefix>
C<TYP__Make>
</TYP__Make>
<FindSymbol><Find>_c</Find>
hh1</FindSymbol>
DEGHInsert _c into 00A10428<Find>_c</Find>
At insert:
Type array:
   
<Find>_unsigned</Find>
</declare>
<declare>
A<ParseSpecifier>
A<Find>_int</Find>
<TYP__Make>
</TYP__Make>
<Find>_d</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_d|CDE<ParseBitfieldSpec><OptConst2></OptConst2></ParseBitfieldSpec>
</ParsePrefixId></ParseDeclPrefix>
C<TYP__Make>
</TYP__Make>
<FindSymbol><Find>_d</Find>
hh1</FindSymbol>
DEGHInsert _d into 00A10428<Find>_d</Find>
At insert:
Type array:
   
</declare>
<Find>_FS</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_FS|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_FS</Find>
hh1</FindSymbol>
DGH<FindSymbol><Find>_FS</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_FS into 00CD49E0
Insert _FS into 00CD49E0Insert into global table
<Find>_FS</Find>
At insert:
Type array:
   
</DoInsert>
JK<Find>_int</Find>
<TYP__Copy>
ACD<CopySymbolTable>
ABEnter SYM::Copy
ALeave SYM::Copy
CInsert _a into 00A10740<Find>_a</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _b into 00A10740<Find>_b</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _c into 00A10740<Find>_c</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _d into 00A10740<Find>_d</Find>
At insert:
Type array:
   
D</CopySymbolTable>
</TYP__Copy>
</declare>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_TestBitfield</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_TestBitfield|CDE</ParsePrefixId><ParseDeclSuffix>
(<openpa>
****************************
****************************
Function: _TestBitfield
****************************
****************************
<TYP__Make>
</TYP__Make>
o p q </openpa>
</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_TestBitfield</Find>
hh1h2i</FindSymbol>
DEGH<FindSymbol><Find>_TestBitfield</Find>
hh1h2i</FindSymbol>
k<DoInsert>insert type: 30
***Inserting:_TestBitfield into 00CD49E0
<BuildSignature>E:_TestBitfield</BuildSignature>Insert _TestBitfield into 00CD49E0Insert into global table
<Find>_TestBitfield</Find>
At insert:
Type array:
   
</DoInsert>
J<ParseFunction>
***********************************
***********************************
***********************************
Parsing function: _TestBitfield
***********************************
***********************************
***********************************
A<BuildParameterList><ParseParmDecls>
A(50)</ParseParmDecls>
B</BuildParameterList>
B<BuildSignature>:_TestBitfield</BuildSignature><Find>_TestBitfield:Match</Find>
CDEG<Parse function body>:_TestBitfield|
<Find>_FS</Find>
Bb<GenerateMonadic>ABCD</GenerateMonadic>
CFound _FS
<Find>_FS</Find>
<Find>_FS</Find>
<Find>_FS:Match</Find>
sp okay sc=11
Declaring var of type
<declare>
A<ParseSpecifier>
A<ParseId>_FS<Find>_FS</Find>
<Find>_FS</Find>
<Find>_FS:Match</Find>
Actually found type.
<Find>_j</Find>
</ParseId></ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_j|CDE</ParsePrefixId><ParseDeclSuffix>
</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_j</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_j</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_j into 019EAA60
Insert _j into 019EAA60<Find>_j</Find>
At insert:
Type array:
   
</DoInsert>
JK<Find>_k</Find>
b<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_k|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_k</Find>
<Find>_k</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_k</Find>
<Find>_k</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_k into 019EAA60
Insert _k into 019EAA60<Find>_k</Find>
<Find>_k</Find>
At insert:
Type array:
   
</DoInsert>
JK<Find>_j</Find>
<TYP__Copy>
ACD<CopySymbolTable>
ABEnter SYM::Copy
ALeave SYM::Copy
CInsert _a into 00A10848<Find>_a</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _b into 00A10848<Find>_b</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _c into 00A10848<Find>_c</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _d into 00A10848<Find>_d</Find>
At insert:
Type array:
   
D</CopySymbolTable>
</TYP__Copy>
</declare>
Found _j
<Find>_j</Find>
<Find>_j</Find>
<Find>_j</Find>
<Parse><ParseExpression>
<Nameref>GSearchfor:_j|
<gsearch2> for: |_j|
Looking in statement table
<Find>_j:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_jIsEqual:T2sp is not null
Type array:
   
tp:00A10708 deref tp:00A10708 </nameref2>
</Nameref>
<Find>_a</Find>
dot search: 00A10740
<FindRising>_a 
<Find>_a:Match</Find>
</FindRising><FindRisingMatch>_a type 36 <FindRising>_a 
<Find>_a:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:36tp1->type:36<Deref></Deref>tp1->type:36B<Find>_j</Find>
</ParseExpression>
</Parse>Found _j
<Find>_j</Find>
<Find>_j</Find>
<Find>_j</Find>
<Parse><ParseExpression>
<Nameref>GSearchfor:_j|
<gsearch2> for: |_j|
Looking in statement table
<Find>_j:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_jIsEqual:T2sp is not null
Type array:
   
tp:00A10708 deref tp:00A10708 </nameref2>
</Nameref>
<Find>_b</Find>
dot search: 00A10740
<FindRising>_b 
<Find>_b:Match</Find>
</FindRising><FindRisingMatch>_b type 36 <FindRising>_b 
<Find>_b:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:36tp1->type:36<Deref></Deref>tp1->type:36B<Find>_j</Find>
</ParseExpression>
</Parse>Found _j
<Find>_j</Find>
<Find>_j</Find>
<Find>_j</Find>
<Parse><ParseExpression>
<Nameref>GSearchfor:_j|
<gsearch2> for: |_j|
Looking in statement table
<Find>_j:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_jIsEqual:T2sp is not null
Type array:
   
tp:00A10708 deref tp:00A10708 </nameref2>
</Nameref>
<Find>_c</Find>
dot search: 00A10740
<FindRising>_c 
<Find>_c:Match</Find>
</FindRising><FindRisingMatch>_c type 36 <FindRising>_c 
<Find>_c:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:36tp1->type:36<Deref></Deref>tp1->type:36B<Find>_j</Find>
<Nameref>GSearchfor:_j|
<gsearch2> for: |_j|
Looking in statement table
<Find>_j:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_jIsEqual:T2sp is not null
Type array:
   
tp:00A10708 deref tp:00A10708 </nameref2>
</Nameref>
<Find>_a</Find>
dot search: 00A10740
<FindRising>_a 
<Find>_a:Match</Find>
</FindRising><FindRisingMatch>_a type 36 <FindRising>_a 
<Find>_a:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:36tp1->type:36<Deref></Deref>tp1->type:36B<Find>_j</Find>
<Nameref>GSearchfor:_j|
<gsearch2> for: |_j|
Looking in statement table
<Find>_j:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_jIsEqual:T2sp is not null
Type array:
   
tp:00A10708 deref tp:00A10708 </nameref2>
</Nameref>
<Find>_b</Find>
dot search: 00A10740
<FindRising>_b 
<Find>_b:Match</Find>
</FindRising><FindRisingMatch>_b type 36 <FindRising>_b 
<Find>_b:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:36tp1->type:36<Deref></Deref>tp1->type:36B<Find>_return</Find>
</ParseExpression>
</Parse><Parse><Find>_j</Find>
<Find>_j</Find>
<Find>_j</Find>
<Find>_j</Find>
<Nameref>GSearchfor:_j|
<gsearch2> for: |_j|
Looking in statement table
<Find>_j:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_jIsEqual:T2sp is not null
Type array:
   
tp:00A10708 deref tp:00A10708 </nameref2>
</Nameref>
<Find>_c</Find>
dot search: 00A10740
<FindRising>_c 
<Find>_c:Match</Find>
</FindRising><FindRisingMatch>_c type 36 <FindRising>_c 
<Find>_c:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:36tp1->type:36<Deref></Deref>tp1->type:36B</Parse>Returning EOF from NextToken.
D<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:1 ===== Before Scan =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 170: ???
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 170: ???
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 170: ???
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 61: ???
  rg: 0
    Node:0
    nodetype: 170: ???
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
    Node:0
    nodetype: 170: ???
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
Node:0
nodetype: 170: ???
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
<Statement__Scan>BC
<Statement__Scan></Statement__Scan><Statement__Scan>BE<OptConst></OptConst>eBE<OptConst></OptConst>eBE<OptConst></OptConst>eBE<OptConst></OptConst>e</Statement__Scan><Statement__Scan></Statement__Scan>c</Statement__Scan><CSETable>For _TestBitfield
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 12   6   5   0   10   _a   
1: 0   3   2   0   -1      
2: 0   2   1   0   -1      
3: 0   3   2   0   -1      
4: 0   2   1   0   -1      
5: 0   4   3   0   -1      
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs><GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:2 ===== Before Scan =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 170: ???
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 170: ???
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 170: ???
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 61: ???
  rg: 0
    Node:0
    nodetype: 170: ???
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
    Node:0
    nodetype: 170: ???
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
Node:0
nodetype: 170: ???
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
<CSETable>For _TestBitfield
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 12   6   5   0   10   _a   
1: 0   3   2   0   -1      
2: 0   2   1   0   -1      
3: 0   3   2   0   -1      
4: 0   2   1   0   -1      
5: 0   4   3   0   -1      
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
===== After Update =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 10
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 10
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 10
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 61: ???
  rg: 0
    Node:0
    nodetype: 56: en_regvar
    rg: 10
      Node:0
      nodetype: 45: en_autocon
      rg: 0
    Node:0
    nodetype: 56: en_regvar
    rg: 10
      Node:0
      nodetype: 45: en_autocon
      rg: 0
Node:0
nodetype: 56: en_regvar
rg: 10
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs>E_TestBitfield: 1 basic blocks
No move instruction joins live ranges.
----- Compute Live Vars -----
0: g5 g10 g20 g30  || 
Edges to: - - - - Live Out - - - -{ 5 10 20 30 }----- Compute Live Vars -----
0: g5 g10 g20 g30  || 
Edges to: - - - - Live Out - - - -{ 5 10 20 30 }<table style="width:100%">
<tr><td>0: </td><td>vi5 </td><td>vi10 </td><td>vi20 </td><td>vi30 </td><td> || </td><td>vo5 </td><td>vo10 </td><td>vo20 </td><td>vo30 </td></tr>
<tr><td>1: </td><td></td><td></td><td></td><td></td><td> || </td><td></td><td></td><td></td><td></td></tr>
</table>
Visited r30: { 0 }
Visited r20: { 0 }
Visited r10: { 0 }
Visited r5: { 0 }
<VarForests>0
Var30: 1 trees
<Tree>0 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var20: 1 trees
<Tree>1 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var10: 1 trees
<Tree>2 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var5: 1 trees
<Tree>3 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
</VarForests>
<Paths>
0: { 0 }
</Paths>
</ParseFunctionBody>
<FuncSummary>
</FuncSummary>
F</ParseFunction>
</ParseGlobalDecl>
</Parsing GlobalDecl>
</compile>
<Dumplits>
</Dumplits>
<summary>
</summary>
<closefiles>
ABC</closefiles>
<CmdNext>Next on command line (1).</CmdNext>
<Exit></Exit>
