<title>CC64 Compiler debug file</title>
<compile>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EA48(__new)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __new into 00CD49E0Insert into global table
<Find>__new</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EAF8(__autonew)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __autonew into 00CD49E0Insert into global table
<Find>__autonew</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EBA8(__delete)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __delete into 00CD49E0Insert into global table
<Find>__delete</Find>
At insert:
Type array:
   013 
Instructions not in outcode table.
{ 0 1 7 9 10 12 14 16 17 18 20 21 24 26 29 31 37 43 44 45 47 48 49 58 67 68 69 78 79 83 84 93 94 95 117 118 119 120 122 125 129 130 131 132 137 138 151 154 155 156 157 165 166 193 194 195 196 197 198 216 219 221 226 227 228 229 231 236 238 240 243 244 267 268 271 273 274 279 280 283 286 293 294 301 309 310 311 337 341 342 345 346 349 350 351 357 362 367 368 369 370 371 372 373 374 375 391 }<Find>_int</Find>
<Parsing GlobalDecl>
<ParseGlobalDecl>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_TestConstant</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_TestConstant|CDE</ParsePrefixId><ParseDeclSuffix>
(<openpa>
****************************
****************************
Function: _TestConstant
****************************
****************************
<Find>_int</Find>
<TYP__Make>
</TYP__Make>
o p q rss Set false
<BuildParameterList><ParseParmDecls>
A(71)C<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_a</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_a|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_a</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_a</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 7
***Inserting:_a into 0098EC68
Insert _a into 0098EC68<Find>_a</Find>
At insert:
Type array:
   
</DoInsert>
JK</declare>
EA(53)</ParseParmDecls>
B<Find>_a:Match</Find>
</BuildParameterList>
Set false
Set true1
Z
</openpa>
</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_TestConstant</Find>
hh1h2i</FindSymbol>
DEGH<FindSymbol><Find>_TestConstant</Find>
hh1h2i</FindSymbol>
k<DoInsert>insert type: 29
***Inserting:_TestConstant into 00CD49E0
<BuildSignature>E<TypenoToChars>ABCD:HAAA</TypenoToChars>:_TestConstantHAAA</BuildSignature>Insert _TestConstant into 00CD49E0Insert into global table
<Find>_TestConstant</Find>
At insert:
Type array:
   007 
</DoInsert>
J<ParseFunction>
***********************************
***********************************
***********************************
Parsing function: _TestConstant
***********************************
***********************************
***********************************
A<BuildParameterList>Function parameter list already processed.<ParseParmDecls>
A(50)</ParseParmDecls>
B<BuildSignature>:_TestConstant</BuildSignature><Find>_TestConstant:Match</Find>
CDEG<Parse function body>:_TestConstant|
<Find>_int</Find>
Bb<GenerateMonadic>ABCD</GenerateMonadic>
C<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_x</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_x|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_x</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_x</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 7
***Inserting:_x into 0164BF90
Insert _x into 0164BF90<Find>_x</Find>
At insert:
Type array:
   
</DoInsert>
JK<Find>_for</Find>
</declare>
<Parse><Find>_x</Find>
<Nameref>GSearchfor:_x|
<gsearch2> for: |_x|
Looking in statement table
<Find>_x:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_xIsEqual:T2sp is not null
Type array:
   
tp:00A104F8 <Deref></Deref>deref tp:00A104F8 </nameref2>
</Nameref>
<Find>_x</Find>
<Nameref>GSearchfor:_x|
<gsearch2> for: |_x|
Looking in statement table
<Find>_x:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_xIsEqual:T2sp is not null
Type array:
   
tp:00A104F8 <Deref></Deref>deref tp:00A104F8 </nameref2>
</Nameref>
<Find>_x</Find>
<Nameref>GSearchfor:_x|
<gsearch2> for: |_x|
Looking in statement table
<Find>_x:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_xIsEqual:T2sp is not null
Type array:
   
tp:00A104F8 <Deref></Deref>deref tp:00A104F8 </nameref2>
</Nameref>
<Parse><Find>_a</Find>
Found _a
<Find>_a</Find>
<Find>_a</Find>
<Parse><ParseExpression>
<Nameref>GSearchfor:_a|
<gsearch2> for: |_a|
Looking in statement table
<Find>_a</Find>
Looking in outer statement table
<Find>_a</Find>
Looking in function's symbol table
<Find>_a</Find>
Searching method/class:_TestConstant|0021E0A8
Looking at params 0098EC68
<Find>_a:Match</Find>
Found as parameter
</gsearch2>
<nameref2>
A:1:_aIsEqual:T2sp is not null
Type array:
   
tp:00A104A0 <Deref></Deref>deref tp:00A104A0 </nameref2>
</Nameref>
<Find>_a</Find>
<Nameref>GSearchfor:_a|
<gsearch2> for: |_a|
Looking in statement table
<Find>_a</Find>
Looking in outer statement table
<Find>_a</Find>
Looking in function's symbol table
<Find>_a</Find>
Searching method/class:_TestConstant|0021E0A8
Looking at params 0098EC68
<Find>_a:Match</Find>
Found as parameter
</gsearch2>
<nameref2>
A:1:_aIsEqual:T2sp is not null
Type array:
   
tp:00A104A0 <Deref></Deref>deref tp:00A104A0 </nameref2>
</Nameref>
<Find>_x</Find>
<Nameref>GSearchfor:_x|
<gsearch2> for: |_x|
Looking in statement table
<Find>_x</Find>
Looking in outer statement table
<Find>_x:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_xIsEqual:T2sp is not null
Type array:
   
tp:00A104F8 <Deref></Deref>deref tp:00A104F8 </nameref2>
</Nameref>
</ParseExpression>
</Parse><Find>_return</Find>
</Parse><Parse><Find>_a</Find>
<Nameref>GSearchfor:_a|
<gsearch2> for: |_a|
Looking in statement table
<Find>_a</Find>
Looking in outer statement table
<Find>_a</Find>
Looking in outer statement table
<Find>_a</Find>
Looking in function's symbol table
<Find>_a</Find>
Searching method/class:_TestConstant|0021E0A8
Looking at params 0098EC68
<Find>_a:Match</Find>
Found as parameter
</gsearch2>
<nameref2>
A:1:_aIsEqual:T2sp is not null
Type array:
   
tp:00A104A0 <Deref></Deref>deref tp:00A104A0 </nameref2>
</Nameref>
</Parse>Returning EOF from NextToken.
D<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
Statement
Statement
Statement
Statement
Node:0
nodetype: 169: en_ref
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:1 ===== Before Scan =====Statement
Statement
Statement
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
Node:0
nodetype: 139: ???
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 61: ???
  rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
Statement
Node:0
nodetype: 169: en_ref
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Node:0
nodetype: 169: en_ref
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
<Statement__Scan>BC
<Statement__Scan></Statement__Scan><Statement__Scan>B<OptConst></OptConst><OptConst></OptConst><Statement__Scan>BC
<Statement__Scan></Statement__Scan><Statement__Scan>BE<OptConst></OptConst>e</Statement__Scan><Statement__Scan></Statement__Scan>c</Statement__Scan><OptConst></OptConst>BE<OptConst></OptConst>e</Statement__Scan><Statement__Scan></Statement__Scan>c</Statement__Scan><CSETable>For _TestConstant
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 26   13   8   0   10   _x   
1: 6   3   2   0   11   _a   
2: 5   5   0   0   12      
3: 0   1   0   0   -1      
4: 0   5   0   0   -1      
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs><GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
Statement
Statement
Statement
Statement
Node:0
nodetype: 169: en_ref
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:2 ===== Before Scan =====Statement
Statement
Statement
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
Node:0
nodetype: 139: ???
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 61: ???
  rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 45: en_autocon
      rg: 0
Statement
Node:0
nodetype: 169: en_ref
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Node:0
nodetype: 169: en_ref
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
<CSETable>For _TestConstant
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 26   13   8   0   10   _x   
1: 6   3   2   0   11   _a   
2: 5   5   0   0   12      
3: 0   1   0   0   -1      
4: 0   5   0   0   -1      
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
===== After Update =====Statement
Statement
Statement
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 10
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 37: en_icon
  rg: 0
Node:0
nodetype: 139: ???
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 10
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 12
Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 11
    Node:0
    nodetype: 45: en_autocon
    rg: 0
  Node:0
  nodetype: 61: ???
  rg: 0
    Node:0
    nodetype: 56: en_regvar
    rg: 11
      Node:0
      nodetype: 45: en_autocon
      rg: 0
    Node:0
    nodetype: 56: en_regvar
    rg: 10
      Node:0
      nodetype: 45: en_autocon
      rg: 0
Statement
Node:0
nodetype: 56: en_regvar
rg: 10
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Node:0
nodetype: 56: en_regvar
rg: 11
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Statement
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
r11 V =0
</StaticRegs>E_TestConstant: 3 basic blocks
----- Compute Live Vars -----
2: g11 g20 g30  || 
Edges to: - - - - Live Out - - - -{ 11 20 30 }----- Compute Live Vars -----
1: g10 g11 g12  || k10 k11 
Edges to: - - - - Live Out - - - -{ 10 11 12 20 30 }----- Compute Live Vars -----
0: g10 g12 g29 g30  || k11 k12 k29 k30 
Edges to: - - - - Live Out - - - -{ 10 11 12 29 30 }----- Compute Live Vars -----
2: g11 g20 g30  || 
Edges to: - - - - Live Out - - - -{ 11 20 30 }----- Compute Live Vars -----
1: g10 g11 g12  || k10 k11 
Edges to: - - - - Live Out - - - -{ 10 11 12 20 30 }----- Compute Live Vars -----
0: g10 g12 g29 g30  || k11 k12 k29 k30 
Edges to: - - - - Live Out - - - -{ 10 11 12 20 29 30 }----- Compute Live Vars -----
2: g11 g20 g30  || 
Edges to: - - - - Live Out - - - -{ 11 20 30 }----- Compute Live Vars -----
1: g10 g11 g12  || k10 k11 
Edges to: - - - - Live Out - - - -{ 10 11 12 20 30 }----- Compute Live Vars -----
0: g10 g12 g29 g30  || k11 k12 k29 k30 
Edges to: - - - - Live Out - - - -{ 10 11 12 20 29 30 }----- Compute Live Vars -----
2: g11 g20 g30  || 
Edges to: - - - - Live Out - - - -{ 11 20 30 }----- Compute Live Vars -----
1: g10 g11 g12  || k10 k11 
Edges to: - - - - Live Out - - - -{ 10 11 12 20 30 }----- Compute Live Vars -----
0: g10 g12 g29 g30  || k11 k12 k29 k30 
Edges to: - - - - Live Out - - - -{ 10 11 12 20 29 30 }<table style="width:100%">
<tr><td>0: </td><td>vi10 </td><td>vi12 </td><td>vi20 </td><td>vi29 </td><td>vi30 </td><td> || </td><td>vo10 </td><td>vo11 </td><td>vo12 </td><td>vo20 </td><td>vo29 </td><td>vo30 </td></tr>
<tr><td>1: </td><td>vi10 </td><td>vi11 </td><td>vi12 </td><td>vi20 </td><td>vi30 </td><td> || </td><td>vo10 </td><td>vo11 </td><td>vo12 </td><td>vo20 </td><td>vo30 </td><td></td></tr>
<tr><td>2: </td><td>vi11 </td><td>vi20 </td><td>vi30 </td><td></td><td></td><td> || </td><td>vo11 </td><td>vo20 </td><td>vo30 </td><td></td><td></td><td></td></tr>
<tr><td>3: </td><td></td><td></td><td></td><td></td><td></td><td> || </td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
</table>
Visited r30: { 0 1 2 }
Visited r29: { 0 1 2 }
Visited r20: { 0 1 2 }
Visited r12: { 0 1 2 }
Visited r11: { 0 1 2 }
Visited r10: { 0 1 2 }
<VarForests>0
Var30: 1 trees
<Tree>0 Color:-12851 { 0 1 2 }</Tree>
<Forest>{ 0 1 2 }</Forest>
Var29: 1 trees
<Tree>1 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var20: 1 trees
<Tree>2 Color:-12851 { 0 1 2 }</Tree>
<Forest>{ 0 1 2 }</Forest>
Var12: 1 trees
<Tree>3 Color:-12851 { 0 1 }</Tree>
<Forest>{ 0 1 }</Forest>
Var11: 1 trees
<Tree>4 Color:-12851 { 0 1 2 }</Tree>
<Forest>{ 0 1 2 }</Forest>
Var10: 1 trees
<Tree>5 Color:-12851 { 0 1 }</Tree>
<Forest>{ 0 1 }</Forest>
</VarForests>
<Paths>
0: { 0 1 2 }
</Paths>
</ParseFunctionBody>
<FuncSummary>
</FuncSummary>
F</ParseFunction>
</ParseGlobalDecl>
</Parsing GlobalDecl>
</compile>
<Dumplits>
</Dumplits>
<summary>
</summary>
<closefiles>
ABC</closefiles>
<CmdNext>Next on command line (1).</CmdNext>
<Exit></Exit>
