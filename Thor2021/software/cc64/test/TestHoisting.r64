     	code
	align	16
  	code
	align	16
	code
	align	16
	code
	align	16
;====================================================
; Basic Block 0
;====================================================
public code _TestHoisting:
  link     #72
  lea      $gp1,__rodata_start
  stm      [$sp],#$00003E00
  ldo      $s1,32[$fp]
  ldi      $s4,#TestHoisting_printf
; volatile int n;	// prevent n from being assigned a register
  ldi      $s2,#10
  ldi      $s3,#15
  ldi      $s2,#21
TestHoisting_17:
; printf("%d", a);
  lea      $t0,TestHoisting_1[$gp1]
  push     $t0
  ldo      $t0,16[$fp]
  push     $t0
  jal      $ra,[$s4]
; for (j = 0; j < 20; j++) {
  mov      $s0,$x0
  bge      $s0,#20,TestHoisting_20
TestHoisting_19:
; c = c + b;
  add      $s1,$s1,$s2
TestHoisting_21:
  add      $s0,$s0,#1
  blt      $s0,#20,TestHoisting_19
TestHoisting_20:
; d = d + c;
  add      $s3,$s3,$s1
; n++;
  ldo      $t0,-8[$fp]
  add      $t0,$t0,#1
  sto      $t0,-8[$fp]
; } while (n < 10);
  ldo      $t0,-8[$fp]
  blt      $t0,#10,TestHoisting_17
; printf("%d", b);
  lea      $t0,TestHoisting_2[$gp1]
  push     $t0,$s2
  jal      $ra,[$s4]
; printf("%d", c);
  lea      $t0,TestHoisting_3[$gp1]
  push     $t0,$s1
  jal      $ra,[$s4]
TestHoisting_13:
TestHoisting_16:
  ldm      [$sp],#$00003E00
  unlink 
  add      $sp,$sp,#32
  ret    
endpublic

	rodata
	align	16
	align	8
TestHoisting_1:	; %d
	dcw	37,100,0
TestHoisting_2:	; %d
	dcw	37,100,0
TestHoisting_3:	; %d
	dcw	37,100,0
;	global	_TestHoisting
	extern	TestHoisting_printf
