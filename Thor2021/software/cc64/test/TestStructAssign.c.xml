<title>CC64 Compiler debug file</title>
<compile>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EA48(__new)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __new into 00CD49E0Insert into global table
<Find>__new</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EAF8(__autonew)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __autonew into 00CD49E0Insert into global table
<Find>__autonew</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EBA8(__delete)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __delete into 00CD49E0Insert into global table
<Find>__delete</Find>
At insert:
Type array:
   013 
Instructions not in outcode table.
{ 0 1 7 9 10 12 14 16 17 18 20 21 24 26 29 31 37 43 44 45 47 48 49 58 67 68 69 78 79 83 84 93 94 95 117 118 119 120 122 125 126 127 129 130 131 132 137 138 151 154 155 156 157 165 166 193 194 195 196 197 198 216 219 221 226 227 228 229 231 236 238 240 243 244 267 268 271 273 274 279 280 283 286 293 294 301 309 310 311 337 341 342 345 346 349 350 351 357 362 367 368 369 370 371 372 373 374 375 391 }<Find>_typedef</Find>
<Parsing GlobalDecl>
<ParseGlobalDecl>
<declare>
A<ParseSpecifier>
A<Find>_struct</Find>
Insert into tagtable:__noname_tag0|
<Find>__noname_tag0</Find>
At insert:
Type array:
   
Insert into tagtable:__noname_tag0|
<Find>__noname_tag0:MatchIsEqual:T2:Exact matchType array:
   
Type array:
   
<Find>_int</Find>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_i</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_i|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_i</Find>
hh1</FindSymbol>
DEGHInsert _i into 00A10428<Find>_i</Find>
At insert:
Type array:
   
<Find>_char</Find>
</declare>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_ch</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_ch|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_ch</Find>
hh1</FindSymbol>
DEGHInsert _ch into 00A10428<Find>_ch</Find>
At insert:
Type array:
   
<Find>_float</Find>
</declare>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_f</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_f|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_f</Find>
hh1</FindSymbol>
DEGHInsert _f into 00A10428<Find>_f</Find>
At insert:
Type array:
   
</declare>
<Find>_UT</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_UT|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_UT</Find>
hh1</FindSymbol>
DGH<FindSymbol><Find>_UT</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_UT into 00CD49E0
Insert _UT into 00CD49E0Insert into global table
<Find>_UT</Find>
At insert:
Type array:
   
</DoInsert>
JK<Find>_UT</Find>
<TYP__Copy>
ACD<CopySymbolTable>
ABEnter SYM::Copy
ALeave SYM::Copy
CInsert _i into 00A10588<Find>_i</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _ch into 00A10588<Find>_ch</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _f into 00A10588<Find>_f</Find>
At insert:
Type array:
   
D</CopySymbolTable>
</TYP__Copy>
</declare>
<declare>
A<ParseSpecifier>
A<ParseId>_UT<Find>_UT</Find>
<Find>_UT</Find>
<Find>_UT:Match</Find>
Actually found type.
<Find>_a</Find>
</ParseId></ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_a|CDE</ParsePrefixId><ParseDeclSuffix>
=</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_a</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_a</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_a into 00CD49E0
Insert _a into 00CD49E0Insert into global table
<Find>_a</Find>
At insert:
Type array:
   
</DoInsert>
JK<TYP__Make>
</TYP__Make>
<Find>_UT</Find>
<TYP__Copy>
ACD<CopySymbolTable>
ABEnter SYM::Copy
ALeave SYM::Copy
CInsert _i into 00A10638<Find>_i</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _ch into 00A10638<Find>_ch</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _f into 00A10638<Find>_f</Find>
At insert:
Type array:
   
D</CopySymbolTable>
</TYP__Copy>
</declare>
<declare>
A<ParseSpecifier>
A<ParseId>_UT<Find>_UT</Find>
<Find>_UT</Find>
<Find>_UT:Match</Find>
Actually found type.
<Find>_b</Find>
</ParseId></ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_b|CDE</ParsePrefixId><ParseDeclSuffix>
=</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_b</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_b</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_b into 00CD49E0
Insert _b into 00CD49E0Insert into global table
<Find>_b</Find>
At insert:
Type array:
   
</DoInsert>
JK<TYP__Make>
</TYP__Make>
<Find>_int</Find>
<TYP__Copy>
ACD<CopySymbolTable>
ABEnter SYM::Copy
ALeave SYM::Copy
CInsert _i into 00A106E8<Find>_i</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _ch into 00A106E8<Find>_ch</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _f into 00A106E8<Find>_f</Find>
At insert:
Type array:
   
D</CopySymbolTable>
</TYP__Copy>
</declare>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_TestStructAssign</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_TestStructAssign|CDE</ParsePrefixId><ParseDeclSuffix>
(<openpa>
****************************
****************************
Function: _TestStructAssign
****************************
****************************
<TYP__Make>
</TYP__Make>
o p q </openpa>
</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_TestStructAssign</Find>
hh1h2i</FindSymbol>
DEGH<FindSymbol><Find>_TestStructAssign</Find>
hh1h2i</FindSymbol>
k<DoInsert>insert type: 30
***Inserting:_TestStructAssign into 00CD49E0
<BuildSignature>E:_TestStructAssign</BuildSignature>Insert _TestStructAssign into 00CD49E0Insert into global table
<Find>_TestStructAssign</Find>
At insert:
Type array:
   
</DoInsert>
J<ParseFunction>
***********************************
***********************************
***********************************
Parsing function: _TestStructAssign
***********************************
***********************************
***********************************
A<BuildParameterList><ParseParmDecls>
A(50)</ParseParmDecls>
B</BuildParameterList>
B<BuildSignature>:_TestStructAssign</BuildSignature><Find>_TestStructAssign:Match</Find>
CDEG<Parse function body>:_TestStructAssign|
<Find>_UT</Find>
Bb<GenerateMonadic>ABCD</GenerateMonadic>
CFound _UT
<Find>_UT</Find>
<Find>_UT</Find>
<Find>_UT:Match</Find>
sp okay sc=11
Declaring var of type
<declare>
A<ParseSpecifier>
A<ParseId>_UT<Find>_UT</Find>
<Find>_UT</Find>
<Find>_UT:Match</Find>
Actually found type.
<Find>_c</Find>
</ParseId></ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_c|CDE</ParsePrefixId><ParseDeclSuffix>
</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_c</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_c</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_c into 0162CD28
Insert _c into 0162CD28<Find>_c</Find>
At insert:
Type array:
   
</DoInsert>
JK<Find>_d</Find>
b<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_d|CDE</ParsePrefixId></ParseDeclPrefix>
C<FindSymbol><Find>_d</Find>
<Find>_d</Find>
hh1</FindSymbol>
DEGH<FindSymbol><Find>_d</Find>
<Find>_d</Find>
hh1</FindSymbol>
k<DoInsert>insert type: 24
***Inserting:_d into 0162CD28
Insert _d into 0162CD28<Find>_d</Find>
<Find>_d</Find>
At insert:
Type array:
   
</DoInsert>
JK<Find>_c</Find>
<TYP__Copy>
ACD<CopySymbolTable>
ABEnter SYM::Copy
ALeave SYM::Copy
CInsert _i into 00A107F0<Find>_i</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _ch into 00A107F0<Find>_ch</Find>
At insert:
Type array:
   
DBEnter SYM::Copy
ALeave SYM::Copy
CInsert _f into 00A107F0<Find>_f</Find>
At insert:
Type array:
   
D</CopySymbolTable>
</TYP__Copy>
</declare>
Found _c
<Find>_c</Find>
<Find>_c</Find>
<Find>_c</Find>
<Parse><ParseExpression>
<Nameref>GSearchfor:_c|
<gsearch2> for: |_c|
Looking in statement table
<Find>_c:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_cIsEqual:T2sp is not null
Type array:
   
tp:00A10550 deref tp:00A10550 </nameref2>
</Nameref>
<Find>_UT</Find>
<Find>_UT</Find>
<Find>_UT</Find>
<Find>_UT:Match</Find>
<ParseSpecifier>
A<ParseId>_UT<Find>_UT</Find>
<Find>_UT</Find>
<Find>_UT:Match</Find>
Actually found type.
</ParseId></ParseSpecifier>
<Declaration_ParsePrefix>(53)
D<ParseDeclSuffix>
</ParseDeclSuffix>
d</ParseDeclPrefix>
<TYP__Make>
</TYP__Make>
<OptConst></OptConst><Find>_c</Find>
</ParseExpression>
</Parse>Found _c
<Find>_c</Find>
<Find>_c</Find>
<Find>_c</Find>
<Parse><ParseExpression>
<Nameref>GSearchfor:_c|
<gsearch2> for: |_c|
Looking in statement table
<Find>_c:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_cIsEqual:T2sp is not null
Type array:
   
tp:00A10550 deref tp:00A10550 </nameref2>
</Nameref>
<Find>_d</Find>
<Nameref>GSearchfor:_d|
<gsearch2> for: |_d|
Looking in statement table
<Find>_d:Match</Find>
Found as an auto var
</gsearch2>
<nameref2>
A:1:_dIsEqual:T2sp is not null
Type array:
   
tp:00A107B8 deref tp:00A107B8 </nameref2>
</Nameref>
<Find>_return</Find>
</ParseExpression>
</Parse><Parse><Find>_b</Find>
<Find>_b</Find>
<Find>_b</Find>
<Find>_b:Match</Find>
<Nameref>GSearchfor:_b|
<gsearch2> for: |_b|
Looking in statement table
<Find>_b</Find>
<Find>_b</Find>
<Find>_b</Find>
Looking in function's symbol table
<Find>_b</Find>
Searching method/class:_TestStructAssign|0021EFA8
Looking at params 0098EC68
<Find>_b</Find>
Looking at class members 00A10798
Looking at global symbols
<Find>_b:Match</Find>
Found in global symbol table
</gsearch2>
<nameref2>
A:1:_bIsEqual:T2sp is not null
Type array:
   
tp:00A106B0 deref tp:00A106B0 </nameref2>
</Nameref>
<Find>_f</Find>
dot search: 00A106E8
<FindRising>_f 
<Find>_f:Match</Find>
</FindRising><FindRisingMatch>_f type 9 <FindRising>_f 
<Find>_f:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:9tp1->type:9<Deref></Deref>tp1->type:9B<Find>_a</Find>
<Nameref>GSearchfor:_a|
<gsearch2> for: |_a|
Looking in statement table
<Find>_a</Find>
<Find>_a</Find>
<Find>_a</Find>
Looking in function's symbol table
<Find>_a</Find>
Searching method/class:_TestStructAssign|0021EFA8
Looking at params 0098EC68
<Find>_a</Find>
Looking at class members 00A10798
Looking at global symbols
<Find>_a:Match</Find>
Found in global symbol table
</gsearch2>
<nameref2>
A:1:_aIsEqual:T2sp is not null
Type array:
   
tp:00A10600 deref tp:00A10600 </nameref2>
</Nameref>
<Find>_i</Find>
dot search: 00A10638
<FindRising>_i 
<Find>_i:Match</Find>
</FindRising><FindRisingMatch>_i type 7 <FindRising>_i 
<Find>_i:Match</Find>
</FindRising>Found method:</FindRisingMatch>
tp1->type:7tp1->type:7<Deref></Deref>tp1->type:7B</Parse>Returning EOF from NextToken.
D<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:1 ===== Before Scan =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
  Node:0
  nodetype: 5: en_ref
  rg: 0
    Node:0
    nodetype: 4: ???
    rg: 0
      Node:0
      nodetype: 37: en_icon
      rg: 0
        Node:0
        nodetype: 37: en_icon
        rg: 0
          Node:0
          nodetype: 38: ???
          rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Node:0
nodetype: 77: ???
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 61: ???
    rg: 0
      Node:0
      nodetype: 44: en_ref
      rg: 0
      Node:0
      nodetype: 37: en_icon
      rg: 0
  Node:0
  nodetype: 98: ???
  rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 44: ???
      rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 61: ???
      rg: 0
        Node:0
        nodetype: 44: en_ref
        rg: 0
        Node:0
        nodetype: 37: en_icon
        rg: 0
Statement
<Statement__Scan>BC
<Statement__Scan></Statement__Scan><Statement__Scan>BE<OptConst></OptConst>eBE<OptConst></OptConst>eBE<OptConst></OptConst>e</Statement__Scan><Statement__Scan></Statement__Scan>c</Statement__Scan><CSETable>For _TestStructAssign
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 4   2   1   0   10   _c      
1: 2   1   0   0   -1   _d      
2: 0   1   1   0   -1      
3: 0   1   1   0   -1   _i   _a   
4: 0   1   1   0   -1   _b   _b   
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs><GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:2 ===== Before Scan =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
  Node:0
  nodetype: 5: en_ref
  rg: 0
    Node:0
    nodetype: 4: ???
    rg: 0
      Node:0
      nodetype: 37: en_icon
      rg: 0
        Node:0
        nodetype: 37: en_icon
        rg: 0
          Node:0
          nodetype: 38: ???
          rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Node:0
nodetype: 77: ???
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 61: ???
    rg: 0
      Node:0
      nodetype: 44: en_ref
      rg: 0
      Node:0
      nodetype: 37: en_icon
      rg: 0
  Node:0
  nodetype: 98: ???
  rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 44: ???
      rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 61: ???
      rg: 0
        Node:0
        nodetype: 44: en_ref
        rg: 0
        Node:0
        nodetype: 37: en_icon
        rg: 0
Statement
<CSETable>For _TestStructAssign
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 4   2   1   0   10   _c      
1: 2   1   0   0   -1   _d      
2: 0   1   1   0   -1      
3: 0   1   1   0   -1   _i   _a   
4: 0   1   1   0   -1   _b   _b   
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
===== After Update =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 10
  Node:0
  nodetype: 5: en_ref
  rg: 0
    Node:0
    nodetype: 4: ???
    rg: 0
      Node:0
      nodetype: 37: en_icon
      rg: 0
        Node:0
        nodetype: 37: en_icon
        rg: 0
          Node:0
          nodetype: 38: ???
          rg: 0
st_expr
Node:0
nodetype: 118: en_assign
rg: 0
  Node:0
  nodetype: 56: en_regvar
  rg: 10
  Node:0
  nodetype: 45: en_autocon
  rg: 0
Node:0
nodetype: 77: ???
rg: 0
  Node:0
  nodetype: 169: en_ref
  rg: 0
    Node:0
    nodetype: 61: ???
    rg: 0
      Node:0
      nodetype: 44: en_ref
      rg: 0
      Node:0
      nodetype: 37: en_icon
      rg: 0
  Node:0
  nodetype: 98: ???
  rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 44: ???
      rg: 0
    Node:0
    nodetype: 169: en_ref
    rg: 0
      Node:0
      nodetype: 61: ???
      rg: 0
        Node:0
        nodetype: 44: en_ref
        rg: 0
        Node:0
        nodetype: 37: en_icon
        rg: 0
Statement
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs>E_TestStructAssign: 1 basic blocks
No move instruction joins live ranges.
----- Compute Live Vars -----
0: g4 g5 g6 g7 g10 g20 g21 g22 g27 g28 g29 g30  || 
Edges to: - - - - Live Out - - - -{ 4 5 6 7 10 20 21 22 27 28 29 30 }----- Compute Live Vars -----
0: g4 g5 g6 g7 g10 g20 g21 g22 g27 g28 g29 g30  || 
Edges to: - - - - Live Out - - - -{ 4 5 6 7 10 20 21 22 27 28 29 30 }<table style="width:100%">
<tr><td>0: </td><td>vi4 </td><td>vi5 </td><td>vi6 </td><td>vi7 </td><td>vi10 </td><td>vi20 </td><td>vi21 </td><td>vi22 </td><td>vi27 </td><td>vi28 </td><td>vi29 </td><td>vi30 </td><td> || </td><td>vo4 </td><td>vo5 </td><td>vo6 </td><td>vo7 </td><td>vo10 </td><td>vo20 </td><td>vo21 </td><td>vo22 </td><td>vo27 </td><td>vo28 </td><td>vo29 </td><td>vo30 </td></tr>
<tr><td>1: </td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td> || </td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
</table>
Visited r30: { 0 }
Visited r29: { 0 }
Visited r28: { 0 }
Visited r27: { 0 }
Visited r22: { 0 }
Visited r21: { 0 }
Visited r20: { 0 }
Visited r10: { 0 }
Visited r7: { 0 }
Visited r6: { 0 }
Visited r5: { 0 }
Visited r4: { 0 }
<VarForests>0
Var30: 1 trees
<Tree>0 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var29: 1 trees
<Tree>1 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var28: 1 trees
<Tree>2 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var27: 1 trees
<Tree>3 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var22: 1 trees
<Tree>4 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var21: 1 trees
<Tree>5 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var20: 1 trees
<Tree>6 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var10: 1 trees
<Tree>7 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var7: 1 trees
<Tree>8 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var6: 1 trees
<Tree>9 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var5: 1 trees
<Tree>10 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var4: 1 trees
<Tree>11 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
</VarForests>
<Paths>
0: { 0 }
</Paths>
</ParseFunctionBody>
<FuncSummary>
</FuncSummary>
F</ParseFunction>
</ParseGlobalDecl>
</Parsing GlobalDecl>
</compile>
<Dumplits>
...</Dumplits>
<summary>
</summary>
<closefiles>
ABC</closefiles>
<CmdNext>Next on command line (1).</CmdNext>
<Exit></Exit>
