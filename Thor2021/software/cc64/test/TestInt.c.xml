<title>CC64 Compiler debug file</title>
<compile>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EA48(__new)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __new into 00CD49E0Insert into global table
<Find>__new</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EAF8(__autonew)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __autonew into 00CD49E0Insert into global table
<Find>__autonew</Find>
At insert:
Type array:
   007 
<TYP__Make>
</TYP__Make>
Insert _p0 into 0098EBA8(__delete)
<Find>_p0</Find>
At insert:
Type array:
   
Insert __delete into 00CD49E0Insert into global table
<Find>__delete</Find>
At insert:
Type array:
   013 
Instructions not in outcode table.
{ 0 1 7 9 10 12 14 16 17 18 20 21 24 26 29 31 37 43 44 45 47 48 49 58 67 68 69 78 79 83 84 93 94 95 117 118 119 120 122 127 129 130 131 132 137 138 151 154 155 156 157 165 166 193 194 195 196 197 198 216 219 221 226 227 228 229 231 236 238 240 243 244 267 268 271 273 274 279 280 283 286 293 294 301 309 310 311 337 341 342 345 346 349 350 351 357 362 367 368 369 370 371 372 373 374 375 391 }<Find>_void</Find>
<Parsing GlobalDecl>
<ParseGlobalDecl>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_interrupt</Find>
<TYP__Make>
</TYP__Make>
<Find>_myint</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_myint|CDE</ParsePrefixId><ParseDeclSuffix>
(<openpa>
****************************
****************************
Function: _myint
****************************
****************************
<TYP__Make>
</TYP__Make>
o p q </openpa>
</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_myint</Find>
hh1h2i</FindSymbol>
DEGH<FindSymbol><Find>_myint</Find>
hh1h2i</FindSymbol>
k<DoInsert>insert type: 30
***Inserting:_myint into 00CD49E0
<BuildSignature>E:_myint</BuildSignature>Insert _myint into 00CD49E0Insert into global table
<Find>_myint</Find>
At insert:
Type array:
   
</DoInsert>
J<ParseFunction>
***********************************
***********************************
***********************************
Parsing function: _myint
***********************************
***********************************
***********************************
A<BuildParameterList><ParseParmDecls>
A(50)</ParseParmDecls>
B</BuildParameterList>
B<BuildSignature>:_myint</BuildSignature><Find>_myint:Match</Find>
CDEG<Parse function body>:_myint|
<Find>_printf</Find>
Bb<GenerateMonadic>ABCD</GenerateMonadic>
CFound _printf
<Find>_printf</Find>
<Find>_printf</Find>
<Parse><ParseExpression>
<Nameref>GSearchfor:_printf|
<gsearch2> for: |_printf|
Looking in statement table
<Find>_printf</Find>
Looking in function's symbol table
<Find>_printf</Find>
Searching method/class:_myint|0021E0A8
Looking at params 0098EC68
<Find>_printf</Find>
Looking at class members 00A104D8
Looking at global symbols
<Find>_printf</Find>
</gsearch2>

<gsearch2> for: |TestInt_printf|
Looking in statement table
<Find>TestInt_printf</Find>
Looking in function's symbol table
<Find>TestInt_printf</Find>
Searching method/class:_myint|0021E0A8
Looking at params 0098EC68
<Find>TestInt_printf</Find>
Looking at class members 00A104D8
Looking at global symbols
<Find>TestInt_printf</Find>
</gsearch2>
<nameref2>
A:0:TestInt_printf<ArgumentList>013 lastst=53</ArgumentList>
Insert at nameref
Type array:
   
Insert TestInt_printf into 00CD49E0Insert into global table
<Find>TestInt_printf</Find>
At insert:
Type array:
   
<BuildSignature>E:TestInt_printf</BuildSignature></nameref2>
</Nameref>
</ParseExpression>
</Parse><Find>_int</Find>
D<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:1 ===== Before Scan =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 53: ???
rg: 0
  Node:0
  nodetype: 50: ???
  rg: 0
  Node:0
  nodetype: 1: en_void
  rg: 0
    Node:0
    nodetype: 43: ???
    rg: 0
Statement
<Statement__Scan>BC
<Statement__Scan></Statement__Scan><Statement__Scan>BE<OptConst></OptConst>e</Statement__Scan><Statement__Scan></Statement__Scan>c</Statement__Scan><CSETable>For _myint
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 1   1   0   0   -1      
1: 1   1   1   0   -1   TestInt_printf   
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>

<gsearch2> for: |TestInt_printf|
Looking in statement table
<Find>TestInt_printf</Find>
Looking in function's symbol table
<Find>TestInt_printf</Find>
Searching method/class:_myint|0021E0A8
Looking at params 0098EC68
<Find>TestInt_printf</Find>
Looking at class members 00A104D8
Looking at global symbols
<Find>TestInt_printf:Match</Find>
Found in global symbol table
</gsearch2>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs><GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:2 ===== Before Scan =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 53: ???
rg: 0
  Node:0
  nodetype: 50: ???
  rg: 0
  Node:0
  nodetype: 1: en_void
  rg: 0
    Node:0
    nodetype: 43: ???
    rg: 0
Statement
<CSETable>For _myint
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 1   1   0   0   -1      
1: 1   1   1   0   -1   TestInt_printf   
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
===== After Update =====Statement
Statement
Statement
st_expr
Node:0
nodetype: 53: ???
rg: 0
  Node:0
  nodetype: 50: ???
  rg: 0
  Node:0
  nodetype: 1: en_void
  rg: 0
    Node:0
    nodetype: 43: ???
    rg: 0
Statement
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>

<gsearch2> for: |TestInt_printf|
Looking in statement table
<Find>TestInt_printf</Find>
Looking in function's symbol table
<Find>TestInt_printf</Find>
Searching method/class:_myint|0021E0A8
Looking at params 0098EC68
<Find>TestInt_printf</Find>
Looking at class members 00A104D8
Looking at global symbols
<Find>TestInt_printf:Match</Find>
Found in global symbol table
</gsearch2>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs>E_myint: 0 basic blocks
No move instruction joins live ranges.
----- Compute Live Vars -----
0: g27 g30  || 
Edges to: - - - - Live Out - - - -{ 27 30 }----- Compute Live Vars -----
0: g27 g30  || 
Edges to: - - - - Live Out - - - -{ 27 30 }<table style="width:100%">
<tr><td>0: </td><td>vi27 </td><td>vi30 </td><td> || </td><td>vo27 </td><td>vo30 </td></tr>
</table>
Visited r30: { 0 }
Visited r27: { 0 }
<VarForests>0
Var30: 1 trees
<Tree>0 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
Var27: 1 trees
<Tree>1 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
</VarForests>
<Paths>
0: { 0 }
</Paths>
</ParseFunctionBody>
<FuncSummary>
</FuncSummary>
F</ParseFunction>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_interrupt</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(128)
D<ParseDeclSuffix>
</ParseDeclSuffix>
d</ParseDeclPrefix>
C</declare>
<declare>
A<ParseSpecifier>
A<TYP__Make>
</TYP__Make>
<Find>_BIOScall</Find>
</ParseSpecifier>
Bb<Declaration_ParsePrefix>(1)
I<ParsePrefixId>B|_BIOScall|CDE</ParsePrefixId><ParseDeclSuffix>
(<openpa>
****************************
****************************
Function: _BIOScall
****************************
****************************
<TYP__Make>
</TYP__Make>
o p q </openpa>
</ParseDeclSuffix>
</ParseDeclPrefix>
C<FindSymbol><Find>_BIOScall</Find>
hh1h2i</FindSymbol>
DEGH<FindSymbol><Find>_BIOScall</Find>
hh1h2i</FindSymbol>
k<DoInsert>insert type: 30
***Inserting:_BIOScall into 00CD49E0
<BuildSignature>E:_BIOScall</BuildSignature>Insert _BIOScall into 00CD49E0Insert into global table
<Find>_BIOScall</Find>
At insert:
Type array:
   
</DoInsert>
J<ParseFunction>
***********************************
***********************************
***********************************
Parsing function: _BIOScall
***********************************
***********************************
***********************************
A<BuildParameterList><ParseParmDecls>
A(50)</ParseParmDecls>
B</BuildParameterList>
B<BuildSignature>:_BIOScall</BuildSignature><Find>_BIOScall:Match</Find>
CDEG<Parse function body>:_BIOScall|
<Find>_return</Find>
Bb<GenerateMonadic>ABCD</GenerateMonadic>
C<Parse></Parse>Returning EOF from NextToken.
D<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:1 ===== Before Scan =====Statement
Statement
Statement
Node:0
nodetype: 37: en_icon
rg: 0
Statement
<Statement__Scan>BC
<Statement__Scan></Statement__Scan><Statement__Scan>BE<OptConst></OptConst>e</Statement__Scan><Statement__Scan></Statement__Scan>c</Statement__Scan><CSETable>For _BIOScall
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 0   1   0   0   -1      
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs><GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
Statement
Statement
Statement
Statement
<GenerateMonadic>ABCD</GenerateMonadic>
<CSETable__Optimize>Pass:2 ===== Before Scan =====Statement
Statement
Statement
Node:0
nodetype: 37: en_icon
rg: 0
Statement
<CSETable>For _BIOScall
*The expression must be used three or more times before it will be allocated
to a register.
N OD Uses DUses Void Reg Sym
0: 0   1   0   0   -1      
</CSETable>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
===== After Update =====Statement
Statement
Statement
Node:0
nodetype: 37: en_icon
rg: 0
Statement
</CSETable__Optimize>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateZeradic>ABCD</GenerateZeradic>
<GenerateMonadic>ABCD</GenerateMonadic>
<GenerateMonadic>ABCD</GenerateMonadic>
<StaticRegs>====== Statically Assigned Registers =======
</StaticRegs>E_BIOScall: 1 basic blocks
No move instruction joins live ranges.
----- Compute Live Vars -----
0: g20  || k20 
Edges to: - - - - Live Out - - - -{ 20 }----- Compute Live Vars -----
0: g20  || k20 
Edges to: - - - - Live Out - - - -{ 20 }<table style="width:100%">
<tr><td>0: </td><td>vi20 </td><td> || </td><td>vo20 </td></tr>
<tr><td>1: </td><td></td><td> || </td><td></td></tr>
</table>
Visited r20: { 0 }
<VarForests>0
Var20: 1 trees
<Tree>0 Color:-12851 { 0 }</Tree>
<Forest>{ 0 }</Forest>
</VarForests>
<Paths>
0: { 0 }
</Paths>
</ParseFunctionBody>
<FuncSummary>
</FuncSummary>
F</ParseFunction>
</ParseGlobalDecl>
</Parsing GlobalDecl>
</compile>
<Dumplits>
.</Dumplits>
<summary>
</summary>
<closefiles>
ABC</closefiles>
<CmdNext>Next on command line (1).</CmdNext>
<Exit></Exit>
