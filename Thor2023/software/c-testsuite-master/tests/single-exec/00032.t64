 
#{++ _main

	.text
	.align	0

	.align 5

	.sdreg	61
  #====================================================
# Basic Block 0
#====================================================
_main:
  sub      sp,sp,64
  sth      fp,[sp]
  mov      fp,sp
  sub      sp,sp,128
  bsr      lr2,store_s0s3
  lea      s0,-32[fp]
  ldi      s2,16
  ldi      s3,2
# arr[0] = 2;
  sth      s3,[s0]
# arr[1] = 3;
  ldi      t0,3
  sth      t0,0[s0+s2*]
# p = &arr[0];
  mov      s1,s0
# if(*(p++) != 2)
  ldh      t0,[s1]
  beq      t0,s3,.00023
# return 1;
  ldi      a0,1
.00022:
  bsr      lr2,load_s0s3
  mov      sp,fp
  ldh      fp,[sp]
  add      sp,sp,64
  ret    
.00023:
# if(*(p++) != 3)
  ldh      t0,[s1]
  beq      t0,3,.00025
# return 2;
  mov      a0,s3
  beqz     r0,.00022
.00025:
# p = &arr[1];
  add      s1,s0,s2
# if(*(p--) != 3)
  ldh      t0,[s1]
  beq      t0,3,.00027
# return 1;
  ldi      a0,1
  beqz     r0,.00022
.00027:
# if(*(p--) != 2)
  ldh      t0,[s1]
  beq      t0,s3,.00029
# return 2;
  mov      a0,s3
  beqz     r0,.00022
.00029:
# p = &arr[0];
  mov      s1,s0
# if(*(++p) != 3)
  add      s1,s1,s2
  ldh      t0,[s1]
  beq      t0,3,.00031
# return 1;
  ldi      a0,1
  beqz     r0,.00022
.00031:
# p = &arr[1];
  add      s1,s0,s2
# if(*(--p) != 2)
  sub      s1,s1,s2
  ldh      t0,[s1]
  beq      t0,s3,.00033
# return 1;
  ldi      a0,1
  beqz     r0,.00022
.00033:
# return 0;
  mov      a0,r0
  beqz     r0,.00022
	.type	_main,@function
	.size	_main,$-_main


#--}

	.rodata
	.align	14

