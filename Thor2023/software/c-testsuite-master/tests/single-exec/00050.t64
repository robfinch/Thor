   
	.bss
	.align	8

	.bss
.lcomm __noname_var0,32
	.type	__noname_var0,@object
	.size	__noname_var0,32


       
	.align	8

	.bss
.lcomm __noname_var2,80
	.type	__noname_var2,@object
	.size	__noname_var2,80


 
	.data
	.align	8

	.data
_v:
	.type	_v,@object
	.size	_v,80

	.8byte	1,4,0

	.8byte	4,0


 
#{++ _main

	.text
	.align	0

	.align 5

	.sdreg	61
#====================================================
# Basic Block 0
#====================================================
_main:
# if(v.a != 1)
  ldh      t0,_v[gp]
  beq      t0,1,.00023
# return 1;
  ldi      a0,1
.00022:
  ret    
.00023:
# if(v.b != 2)
  lea      t0,_v[gp]
  ldh      t0,16[t0]
  beq      t0,2,.00025
# return 2;
  ldi      a0,2
  beqz     r0,.00022
.00025:
# if(v.c != 3 || v.d != 3)
  lea      t0,_v[gp]
  ldh      t0,32[t0]
  bne      t0,3,.00029
  lea      t0,_v[gp]
  ldh      t0,32[t0]
  beq      t0,3,.00027
.00029:
# return 3;
  ldi      a0,3
  beqz     r0,.00022
.00027:
# if(v.s.a != 4)
  lea      t1,_v[gp]
  add      t0,t1,48
  ldh      t0,48[t0]
  beq      t0,4,.00030
# return 4;
  ldi      a0,4
  beqz     r0,.00022
.00030:
# if(v.s.b != 5)
  lea      t1,_v[gp]
  add      t0,t1,48
  ldh      t0,64[t0]
  beq      t0,5,.00032
# return 5;
  ldi      a0,5
  beqz     r0,.00022
.00032:
# return 0;
  mov      a0,r0
  beqz     r0,.00022
	.type	_main,@function
	.size	_main,$-_main


#--}

	.rodata
	.align	14

	.align	8



