	.set	CSR_MTVEC,0x3030
	.set	IOBASE,0xFF800000
	.set	RODATABASE,0xFFFE0000
	.set	LEDS,0xFFFFFFFFFF910000

	.bss
_bss_a:
	.space	10

	.data
_data_a:
	.space	10

	.text
	.align	2
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
	jmp			MachineStart
	nop
	nop
	nop

MachineStart:
  # Map 4kB GDT area
#	ldi			$t0,#$8000000000000C00	# entry number = $000, way = 3, write = true
#	ldi			$t1,#$008E000000000000
#	tlbrw		$x0,$t0,$t1
#	FFFC0000
#	1111_1111_1111_1100_0000_0000_0000_0000
#	1111_1111_11_11_1100_0000
#	exim		0x0000000000000E
#	exi56		0xC01E0000000080
#	ldi			t0,0x00000000800000FC		# entry number = $3C0, way = 3, write = true
#	jmp			ms1
ms1:
#	ldi			t1,0x3f00
#	sllh		t1,t1,64
#	exim		0x0000000000000F
#	exi56		0xFFC08000000000
#	ldi			t1,0x00000000FFFC
#	tlbrw		r0,t0,t1
#	add			t0,t0,1
#	tlbrw		x0,t0,t1
#	add			t0,t0,1
#	tlbrw		x0,t0,t1
#	add			t0,t0,1
#	tlbrw		x0,t0,t1
  # Map 32kB scratchpad stack area into stack segment
#	FFFC8000
#	1111_1111_1111_1100_1000_0000_0000_0000
#	1111_1111_11_11_1100_1000
	exim		0x00000000000000
	exi56		0x000FE01E80
	ldi			t0,0x0013F0		# entry number = $3F0, way = 4, write = true
	exim		0x003F000000000
	exi56		0xFFF01000000000
	ldi			t1,0x00FFFC
	tlbrw		r0,t0,t1

	# Map text screen - first 24kB
	# FF800000
	# 1111_1111_10 00_0000_0000 _0000_0000_0000
#	exim		0x0000000000000E
#	exi56		0xC01E0000000080
#	ldi			t0,0x0000000080001000		# entry number = $000, way = 4, write = true
#	exim		0x0000000000000F
#	exi56		0xFF800000000000
#	ldi			t1,0x00000000FF80
#	ldi			r26,5
.0003:
#	tlbrw		r0,t0,t1
#	add			t0,t0,1							# map next 4kB
#	add			t1,t1,1
#	dbra		.0003

	# Map text registers
#	exim		0x0000000000000E
#	exi56		0xC01E0000000080
#	ldi			t0,0x0000000080001001		# entry number = $01D, way = 4, write = true
#	exim		0x0000000000000F
#	exi56		0xFF81D000000000
#	ldi			t1,0x00000000FF81
#	tlbrw		r0,t0,t1

	# Map Sprite registers
#	exim		0x0000000000000E
#	exi56		0xC01E0000000080
#	ldi			t0,0x000000008000100B		# entry number = $0B0, way = 4, write = true
#	exim		0x0000000000000F
#	exi56		0xFF8B0000000000
#	ldi			t1,0x00000000FF8B
#	tlbrw		r0,t0,t1

	# Setup trap vector
	lea			a1,IRQRout
	csrrw		r0,a1,CSR_MTVEC
	csrrw		r0,a1,CSR_MTVEC+1
	csrrw		r0,a1,CSR_MTVEC+2
	csrrw		r0,a1,CSR_MTVEC+3

	# Setup debug mode stack pointer. The debug stack is set to a high order
	# address in the scratchpad memory area.
	ldi			sp,0xFFFC0FF0

#  ldi   	t0,0xAA
#  stb   	t0,LEDS
#  ldi   	a0,0xAA
#  stb   	a0,LEDS
.0002:
	jmp			_main
	bra			.0002
	.type		MachineStart,@function
	.size		MachineStart,$-MachineStart
	
	.align	8
IRQRout:
	ldi			a1,0x03FFFE0003FF0055
	sto			a1,0xff800000
.0004:
	bra			.0004
	.align	6
IRQRoutM1:
	ldi			a1,0x03FFFE0003FF0053
	sto			a1,0xff800000
.0004:
	bra			.0004
	.align	6
IRQRoutM2:
	ldi			a1,0x03FFFE0003FF0048
	sto			a1,0xff800000
.0004:
	bra			.0004
	.align	6
IRQRoutM3:
	ldi			a1,0x03FFFE0003FF004D
	sto			a1,0xff800000
.0004:
	bra			.0004
	.type		IRQRout,@function
	.size		IRQRout,$-IRQRout

_MapPage:
	ldhs		a1,0[sp]
	ldhs		a0,16[sp]
	tlbrw		a0,a0,a1
	add			sp,sp,32
	rts

_PtgHash:
	ldhs		a0,0[sp]
	ptghash	a0,a0
	add			sp,sp,16
	rts

_StPtg:
	ldhs		a2,0[sp]
	ldhs		a1,16[sp]
	ldhs		a0,32[sp]
	stptg		r0,a0,a1,a2
	add			sp,sp,48
	rts
	
_TurnOnPt:
	ldi			a0,4
	csrrw		r0,a0,0x1003
	rts

	.type		_MapPage,@function
	.size		_MapPage,$-_MapPage
